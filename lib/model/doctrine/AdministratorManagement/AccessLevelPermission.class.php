<?php

/**
 * AccessLevelPermission
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    eSIS
 * @subpackage model
 * @author     John Haftom
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class AccessLevelPermission extends PluginAccessLevelPermission
{
	public function processAccessLevelSetting ($_batchAction)
	{ 
		if($_batchAction == 1) {
			$this->makeAccessible(); 
		}
		if($_batchAction == 2) {
			$this->makeApplicable(); 
		}
		return true;
	}
	
	public function makeApplicable()
	{ 
		if($this->applicableFlag) {
			$this->applicable_flag = false; 
			$this->active_flag = false; 
		} else {
			$this->applicable_flag = true; 	
			$this->active_flag = true; 		
		}
		$this->save(); 
			
		return true;
	}
	public function makeActivation ()
	{  
		if($this->activeFlag) {
			$this->active_flag = false; 
		} else {
			$this->active_flag = true; 			
		} 
		$this->save(); 
			
		return true;
	}
	public function makeUpdate ($_accessLevel )
	{  
		if(!$_accessLevel) { return false; }
		$this->access_level = intval($_accessLevel); 
		$this->save(); 
		
		$this->makeAccessLevel ($_accessLevel);
			
		return true;
	}
	public function makeAccessLevel ($_accessLevel )
	{
		switch($_accessLevel) {			
			case PermissionCore::$_VIEW:  
				$this->can_add = false;
				$this->can_edit = false;
				$this->can_delete = false;
				$this->can_view = true;		 
				$this->can_approve = false;			 
			break; 
			case PermissionCore::$_ADD: 
				$this->can_add = true; 
				$this->can_view = true;	
				$this->can_edit = false;
				$this->can_delete = false;
				$this->can_approve = false;			 
			break; 
			case PermissionCore::$_EDIT: 
				$this->can_add = true;
				$this->can_edit = true;
				$this->can_view = true;		 
			break; 
			case PermissionCore::$_ADD_AND_EDIT: 
				$this->can_add = true;
				$this->can_edit = true;
				$this->can_delete = false;
				$this->can_view = true;		
				$this->can_approve = false;		 		
			break; 
			case PermissionCore::$_APPROVE: 
				$this->can_add = true;
				$this->can_edit = true;
				$this->can_delete = false;
				$this->can_view = true;		 
				$this->can_approve = true; 
			break; 
			case PermissionCore::$_FULL_ACCESS: 
				$this->can_add = true;
				$this->can_edit = true;
				$this->can_delete = true;
				$this->can_view = true;		 
				$this->can_approve = true;		 
			break;  
			case PermissionCore::$_NO_ACCESS: 
				$this->can_add = false;
				$this->can_edit = false;
				$this->can_delete = false;
				$this->can_view = false;		 
				$this->can_approve = false;		 
			break;  
		}		
		$this->save();
	}
	public function makeDefaultAccessLevel ()
	{
		switch($this->access_level) {			
			case PermissionCore::$_VIEW:  
				$this->can_add = false;
				$this->can_edit = false;
				$this->can_delete = false;
				$this->can_view = true;		 
				$this->can_approve = false;			 
			break; 
			case PermissionCore::$_ADD: 
				$this->can_add = true; 
				$this->can_view = true;	
				$this->can_edit = false;
				$this->can_delete = false;
				$this->can_approve = false;			 
			break; 
			case PermissionCore::$_EDIT: 
				$this->can_add = true;
				$this->can_edit = true;
				$this->can_view = true;		 
			break; 
			case PermissionCore::$_ADD_AND_EDIT: 
				$this->can_add = true;
				$this->can_edit = true;
				$this->can_delete = false;
				$this->can_view = true;		
				$this->can_approve = false;		 		
			break; 
			case PermissionCore::$_APPROVE: 
				$this->can_add = true;
				$this->can_edit = true;
				$this->can_delete = false;
				$this->can_view = true;		 
				$this->can_approve = true; 
			break; 
			case PermissionCore::$_FULL_ACCESS: 
				$this->can_add = true;
				$this->can_edit = true;
				$this->can_delete = true;
				$this->can_view = true;		 
				$this->can_approve = true;		 
			break;  
			case PermissionCore::$_NO_ACCESS: 
				$this->can_add = false;
				$this->can_edit = false;
				$this->can_delete = false;
				$this->can_view = false;		 
				$this->can_approve = false;		 
			break;  
		}		
		$this->save();
	}
	
	public function processDefaultUserAccessLevel($_userRole)
	{ 
		switch($_userRole) {			
			case UserCore::$_SUPER_ADMINISTRATOR:
				return $this->makeDefaultAccessLevel ( $_key );
			break;
			case UserCore::$_ADMINISTRATOR:
				return $this->makeDefaultAccessLevel ( $_key );
			break;
			case UserCore::$_GENERAL_MANAGER:
				$this->access_level = PermissionCore::processDefaultAccessLevel();
			break;
			case UserCore::$_FINANCE_OFFICER:
				$this->access_level = PermissionCore::processDefaultAccessLevel();
			break;
			case UserCore::$_SUPERVISOR:
				$this->access_level = PermissionCore::processDefaultAccessLevel();
			break;
			case UserCore::$_SALES_PERSON:
				$this->access_level = PermissionCore::processDefaultAccessLevel();
			break;
			case UserCore::$_PURCHASER:
				$this->access_level = PermissionCore::processDefaultAccessLevel();
			break;
			case UserCore::$_OPERATOR:
				$this->access_level = PermissionCore::processDefaultAccessLevel();
			break;
			case UserCore::$_CASHIER:
				$this->access_level = PermissionCore::processDefaultAccessLevel();
			break;
			case UserCore::$_FINANCE_AND_CASHIER:
				$this->access_level = PermissionCore::processDefaultAccessLevel();
			break; 
			case UserCore::$_OTHER_ROLE:
				$this->access_level = PermissionCore::$_NO_ACCESS;
			break; 
		}	
	}
}
