<?php

/**
 * BaseTournamentMatchTeamMedalAward
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $token_id
 * @property integer $tournament_match_medal_award_id
 * @property integer $tournament_match_fixture_id
 * @property integer $tournament_match_fixture_group_id
 * @property integer $tournament_match_participant_team_id
 * @property integer $tournament_medal_award_mode
 * @property integer $gold_medal
 * @property integer $silver_medal
 * @property integer $bronze_medal
 * @property integer $other_medal_award
 * @property integer $total_medal_award
 * @property boolean $active_flag
 * @property integer $status
 * @property clob $description
 * @property TournamentMatchMedalAward $TournamentMatchMedalAward
 * @property TournamentMatchFixture $TournamentMatchFixture
 * @property TournamentMatchFixtureGroup $TournamentMatchFixtureGroup
 * @property TournamentMatchParticipantTeam $TournamentMatchParticipantTeam
 * @property Doctrine_Collection $tournamentMatchTeamMedalAwardParticipants
 * 
 * @package    symfony
 * @subpackage model
 * @author     Mekonen Berhane
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTournamentMatchTeamMedalAward extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mutms_tbl_tournament_match_team_medal_award');
        $this->hasColumn('token_id', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('tournament_match_medal_award_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('tournament_match_fixture_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('tournament_match_fixture_group_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('tournament_match_participant_team_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('tournament_medal_award_mode', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('gold_medal', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('silver_medal', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('bronze_medal', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('other_medal_award', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('total_medal_award', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('active_flag', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('status', 'integer', null, array(
             'type' => 'integer',
             'default' => 1,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TournamentMatchMedalAward', array(
             'local' => 'tournament_match_medal_award_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('TournamentMatchFixture', array(
             'local' => 'tournament_match_fixture_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('TournamentMatchFixtureGroup', array(
             'local' => 'tournament_match_fixture_group_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('TournamentMatchParticipantTeam', array(
             'local' => 'tournament_match_participant_team_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('TournamentMatchTeamMedalAwardParticipant as tournamentMatchTeamMedalAwardParticipants', array(
             'local' => 'id',
             'foreign' => 'tournament_match_team_medal_award_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}