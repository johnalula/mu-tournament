detect_relations: true

############  Game Management ####################

Tournament:
  package: TournamentManagement
  tableName: mutms_tbl_tournament
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    org_id: { type: integer }
    org_token_id: { type: string(100) }  
    name: { type: string(255) }
    alias: { type: string(50) } 
    season: { type: string(50) }   
    start_date: { type: string(100) }
    effective_date: { type: string(100) }
    end_date: { type: string(100) }  
    default_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: true } 
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationTournaments } 

RoundType:
  package: TournamentManagement
  tableName: mutms_tbl_round_type
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    org_id: { type: integer } 
    org_token_id: { type: string(100) }  
    round_type: { type: integer }   
    round_number: { type: integer }   
    name: { type: string(255) }
    alias: { type: string(50) } 
    default_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: true } 
    status: { type: integer} 
    description:  { type: string(255) }    
  relations:  
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationRoundTypes }     
    
GameGroupType:
  package: TournamentManagement
  tableName: mutms_tbl_game_group_type
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    org_id: { type: integer } 
    org_token_id: { type: string(100) }  
    group_category_id: { type: integer } 
    group_name: { type: string(255) }
    group_number: { type: string(255) }
    alias: { type: string(50) } }  
    default_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: true } 
    description:  { type: string(255) }    
  relations:  
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationGroupTypes } 
    
TournamentVenue:
  package: TournamentManagement
  tableName: mutms_tbl_tournament_venue
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    org_id: { type: integer } 
    org_token_id: { type: string(100) }  
    tournament_id: { type: integer } 
    tournament_venue_name: { type: string(255) }
    venue_alias: { type: string(255) }
    default_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: true } 
    description:  { type: string(255) }    
  relations:  
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationGroupTypes } 
    Tournament: { onDelete: CASCADE, local: tournament_id, foreign: id, foreignAlias: tournamentVenues }  
    
GameCategory:
  package: TournamentManagement
  tableName: mutms_tbl_game_category
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    org_id: { type: integer } 
    org_token_id: { type: string(100) }  
    category_type: { type: integer }  
    category_name: { type: string(255) }
    alias: { type: string(50) } }  
    contestant_team_mode: { type: integer } 
    contestant_name_mode: { type: integer } 
    result_ranking_mode: { type: integer } 
    default_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: true } 
    status: { type: integer} 
    description:  { type: string(255) }    
  relations:  
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationGroupTypes }   

############  General Setting ####################
   
SportGame:
  package: TournamentManagement
  tableName: mutms_tbl_sport_game
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    org_id: { type: integer }
    org_token_id: { type: string(100) }
    sport_game_category_id: { type: integer } 
    distance_type: { type: integer }  
    name: { type: string(255) }
    alias: { type: string(50) } }  
    game_distance: { type: integer } 
    game_distance_measurement: { type: integer } 
    sport_game_number: { type: string(50) }
    sport_game_type_mode: { type: integer } 
    contestant_mode: { type: integer } 
    team_contestants_per_game_mode: { type: integer } 
    contestant_team_mode: { type: integer } 
    jump_type_mode: { type: integer } 
    throw_type_mode: { type: integer } 
    win_result_table_point: { type: integer } 
    draw_result_table_point: { type: integer } 
    loose_result_table_point: { type: integer, default: 0 } 
    result_ranking_mode: { type: integer } 
    start_date: { type: string(100) }
    effective_date: { type: string(100) }
    end_date: { type: string(100) }  
    number_of_contestants_per_track_mode: { type: integer } 
    enable_fixed_contestant_per_track_flag: { type: boolean, default: false } 
    enable_player_mode_flag: { type: boolean, default: false } 
    roundable_flag: { type: boolean, default: false } 
    default_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: true } 
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    GameCategory: { onDelete: CASCADE, local: sport_game_category_id, foreign: id, foreignAlias: categorySportGames }  
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationSportGames }   

############  Team Management ####################

Team:
  package: TeamManagement
  tableName: mutms_tbl_participant_teams
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    org_id: { type: integer }
    org_token_id: { type: string(100) }
    tournament_id: { type: integer }
    tournament_token_id: { type:  string(100) }  
    country_id: { type: integer }
    team_number: { type: string(255) }
    team_name: { type: string(255) }
    alias: { type: string(50) } }   
    team_full_alias: { type: string(50) } }   
    team_city: { type: string(50) } }   
    total_member: { type: string(50) } }   
    team_logo_alias: { type: string(50) } }     
    team_logo_file_type: { type: string(255) }
    team_logo_file_name:  { type: string(255) }  
    team_logo_file_name_path:  { type: string(255) }  
    team_logo_file_full_path:  { type: string(255) }   
    team_country_flag_alias: { type: string(50) } }     
    team_country_flag_file_type: { type: string(255) }
    team_country_flag_file_name:  { type: string(255) }  
    team_country_flag_file_name_path:  { type: string(255) }  
    team_country_flag_file_full_path:  { type: string(255) }   
    standing_rank: { type: integer, default: 0 }
    gold_medal: { type: integer, default: 0  }
    silver_medal: { type: integer, default: 0  }
    bronze_medal: { type: integer, default: 0  }
    total_medal_award: { type: integer, default: 0  }
    start_date: { type: string(100) }
    end_date: { type: string(100) }  
    grouped_flag: { type: boolean, default: false } 
    confirmed_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: false } 
    confirmed_status: { type: integer, default: 1  } 
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationTeams }  
    Tournament: { onDelete: CASCADE, local: tournament_id, foreign: id, foreignAlias: tournamentTeams }  

TeamGameParticipation:
  package: TeamManagement
  tableName: mutms_tbl_team_game_participation
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    team_id: { type: integer } 
    team_token_id: { type: string(100) } 
    sport_game_category_id: { type: integer } 
    sport_game_id: { type: integer } 
    sport_game_token_id: { type: string(100) } 
    number_of_players: { type: integer } 
    gender_category_id: { type: integer } 
    event_type: { type: integer } 
    number_of_participants: { type: integer } 
    player_mode: { type: integer } 
    start_date: { type: string(100) }
    effective_date: { type: string(100) }  
    end_date: { type: string(100) }  
    grouped_flag: { type: boolean, default: false } 
    confirmed_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: false } 
    grouped_status: { type: integer, default: 1  } 
    confirmed_status: { type: integer, default: 1  } 
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    Team: { onDelete: CASCADE, local: team_id, foreign: id, foreignAlias: teamGameParticipations }  
    GameCategory: { onDelete: CASCADE, local: sport_game_category_id, foreign: id, foreignAlias: gameCategoryTeamPartcipation }    
    SportGame: { onDelete: CASCADE, local: sport_game_id, foreign: id, foreignAlias: sportGameTeamPartcipation }     

TeamMemberParticipant:
  package: TeamManagement
  tableName: mutms_tbl_team_member_participant
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    team_id: { type: integer }
    team_token_id: { type: string(100) }    
    person_id: { type: integer }
    person_token_id: { type: string(100) }    
    gender_category_id: { type: integer }   
    member_full_name: { type: string(255) }
    member_role_id: { type: integer }    
    member_relation_id: { type: integer }    
    member_age: { type: integer }    
    member_number: { type: integer }    
    confirmed_flag: { type: boolean, default: false } 
    grouped_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: false } 
    grouped_status: { type: integer, default: 1  } 
    confirmed_status: { type: integer, default: 1  } 
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    Team: { onDelete: CASCADE, local: team_id, foreign: id, foreignAlias: teamMemberParticipants }  
    Person: { onDelete: CASCADE, local: person_id, foreign: id, foreignAlias: personTeamParticipants }  
  
TeamMemberParticipantRole:
  package: TeamManagement
  tableName: mutms_tbl_team_member_participant_role
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    team_game_participation_id: { type: integer }
    team_game_participation_token_id: { type: string(100) }    
    team_member_participant_id: { type: integer }
    team_member_participant_token_id: { type: string(100) }  
    member_role_id: { type: integer } 
    member_relation_id: { type: integer }     
    gender_category_id: { type: integer }     
    competition_flag: { type: boolean, default: false } 
    confirmed_flag: { type: boolean, default: false } 
    grouped_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: false } 
    qualified_flag: { type: boolean, default: true  } 
    competition_status: { type: integer, default: 1  } 
    qualification_status: { type: integer, default: 5  } 
    confirmed_status: { type: integer, default: 1  } 
    grouped_status: { type: integer, default: 1  } 
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    TeamGameParticipation: { onDelete: CASCADE, local: team_game_participation_id, foreign: id, foreignAlias: teamGameParticipantPersons }  
    TeamMemberParticipant: { onDelete: CASCADE, local: team_member_participant_id, foreign: id, foreignAlias: teamMemberParticipantRoles }  
  
TeamDetail:
  package: TeamManagement
  tableName: mutms_tbl_team_detail
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    team_id: { type: integer }
    active_flag: { type: boolean, default: true } 
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    Team: { onDelete: CASCADE, local: team_id, foreign: id, foreignAlias: teamsTeamDetails }  


############  Sport Game Group Setting ####################
  
     
TournamentTeamGroup:
  package: TeamGroupSetting
  tableName: mutms_tbl_tournament_team_group
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    tournament_id: { type: integer }
    sport_game_category_id: { type: integer }
    sport_game_category_token_id: { type: string(100) }  
    group_full_code: { type: string(50) }
    group_code: { type: string(50) }
    start_date: { type: string(100) }
    effective_date: { type: string(100) }  
    end_date: { type: string(100) }  
    complete_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: false } 
    process_status: { type: integer, default: 1  } 
    approval_status: { type: integer, default: 1  } 
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    Tournament: { onDelete: CASCADE, local: tournament_id, foreign: id, foreignAlias: tournamentSportGamesGroups }   
    GameCategory: { onDelete: CASCADE, local: sport_game_category_id, foreign: id, foreignAlias: sportGameCategoryTournamentGroups }  
 
SportGameGroup:
  package: TeamGroupSetting
  tableName: mutms_tbl_tournament_sport_game_group_tt
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    tournament_id: { type: integer }
    tournament_team_group_id: { type: integer }
    tournament_team_group_token_id: { type: string(100) }   
    sport_game_id: { type: integer }
    sport_game_token_id: { type: string(100) }   
    gender_category_id: { type: integer }
    group_code: { type: string(50) }
    group_name: { type: string(255) }
    group_number: { type: integer } 
    alias: { type: string(50) }    
    total_group_members: { type: integer } 
    contestant_team_mode: { type: integer } 
    start_date: { type: string(100) }
    effective_date: { type: string(100) }  
    end_date: { type: string(100) }  
    complete_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: false } 
    process_status: { type: integer, default: 1  } 
    approval_status: { type: integer, default: 1  } 
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    Tournament: { onDelete: CASCADE, local: tournament_id, foreign: id, foreignAlias: tournamentSportGamesGroups }   
    TournamentTeamGroup: { onDelete: CASCADE, local: tournament_team_group_id, foreign: id, foreignAlias: tournamentGroupSportGameGroups }   
    SportGame: { onDelete: CASCADE, local: sport_game_id, foreign: id, foreignAlias: sportGameSportGameGroups }  
    
TournamentSportGameGroup:
  package: TeamGroupSetting
  tableName: mutms_tbl_tournament_sport_game_group
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    tournament_id: { type: integer }
    tournament_team_group_id: { type: integer }
    tournament_team_group_token_id: { type: string(100) }   
    sport_game_id: { type: integer }
    sport_game_token_id: { type: string(100) }   
    gender_category_id: { type: integer }
    group_code: { type: string(50) }
    group_name: { type: string(255) }
    group_number: { type: integer } 
    alias: { type: string(50) }    
    total_group_members: { type: integer } 
    number_of_teams_per_group: { type: integer } 
    number_of_participants_per_group: { type: integer } 
    contestant_team_mode: { type: integer } 
    start_date: { type: string(100) }
    effective_date: { type: string(100) }  
    end_date: { type: string(100) }  
    group_team_number_mandatory_flag: { type: boolean, default: false } 
    complete_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: false } 
    confirmed_flag: { type: boolean, default: false } 
    competition_flag: { type: boolean, default: false } 
    confirmed_status: { type: integer, default: 1  } 
    competition_status: { type: integer, default: 1  } 
    process_status: { type: integer, default: 1  } 
    approval_status: { type: integer, default: 1  } 
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    Tournament: { onDelete: CASCADE, local: tournament_id, foreign: id, foreignAlias: tournamentSportGamesGroups }   
    TournamentTeamGroup: { onDelete: CASCADE, local: tournament_team_group_id, foreign: id, foreignAlias: tournamentGroupSportGameGroups }   
    SportGame: { onDelete: CASCADE, local: sport_game_id, foreign: id, foreignAlias: sportGameSportGameGroups }  

MultipleContestantTeamGroup:
  package: TeamGroupSetting
  inheritance:
    extends: TournamentSportGameGroup
    type: concrete
    keyField: type
    keyValue: 1
  columns: 
    
PairContestantTeamGroup:
  package: TeamGroupSetting 
  inheritance:
    extends: TournamentSportGameGroup
    type: concrete
    keyField: type
    keyValue: 2  
  columns:  
 
TournamentGroupParticipantTeam:
  package: TeamGroupSetting
  tableName: mutms_tbl_tournament_group_participant_team
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }     
    tournament_id: { type: integer }
    tournament_sport_game_group_id: { type: integer }
    tournament_sport_game_group_token_id: { type: string(100) }  
    team_id: { type: integer }
    team_token_id: { type: string(100) }    
    team_game_participation_id: { type: integer }
    start_date: { type: string(100) }
    effective_date: { type: string(100) }  
    end_date: { type: string(100) }  
    confirmed_flag: { type: boolean, default: false  } 
    active_flag: { type: boolean  } 
    completed_flag: { type: boolean  } 
    qualified_flag: { type: boolean, default: true  } 
    qualification_status: { type: integer, default: 1  } 
    confirmed_status: { type: integer, default: 1  } 
    process_status: { type: integer, default: 1  } 
    approval_status: { type: integer, default: 1  } 
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    Tournament: { onDelete: CASCADE, local: tournament_id, foreign: id, foreignAlias: tournamentSportGamesTeamGroups }   
    TeamGameParticipation: { onDelete: CASCADE, local: team_game_participation_id, foreign: id, foreignAlias: teamGameParticipationGroupParticipantTeams }  
    Team: { onDelete: CASCADE, local: team_id, foreign: id, foreignAlias: teamGroupMembers }  
    TournamentSportGameGroup: { onDelete: CASCADE, local: tournament_sport_game_group_id, foreign: id, foreignAlias: tournamentSportGameTeamGroups }  
  
 
############  Match Management ####################
   
TournamentMatch:
  package: GameSetting
  tableName: mutms_tbl_tournament_match
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }      
    org_id: { type: integer }
    org_token_id: { type: string(100) }  
    tournament_id: { type: integer } 
    tournament_token_id: { type: string(100) } 
    parent_tournament_match_id: { type: integer } 
    parent_tournament_match_token_id: { type: string(100) } 
    sport_game_category_id: { type: integer } 
    tournament_match_number: { type: string(100) }
    tournament_match_full_number: { type: string(100) }
    tournament_match_round_mode: { type: integer } 
    tournament_match_result_mode: { type: integer } 
    round_type_mode: { type: integer } 
    contestant_team_mode: { type: integer } 
    competition_mode: { type: integer } 
    start_date: { type: string(100) }
    effective_date: { type: string(100) }  
    end_date: { type: string(100) }  
    competition_flag: { type: boolean, default: false } 
    complete_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: false } 
    competition_status: { type: integer, default: 1  } 
    process_status: { type: integer, default: 1  } 
    approval_status: { type: integer, default: 1  } 
    status: { type: integer, default: 1  } 
    description:  { type: string(255) }    
  relations:  
    TournamentMatch: { onDelete: CASCADE, local: parent_tournament_match_id, foreign: id, foreignAlias: parentTournamentMatchs }
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationTournamentMatchs }
    Tournament: { onDelete: CASCADE, local: tournament_id, foreign: id, foreignAlias: tournamentMatchs }     
    GameCategory: { onDelete: CASCADE, local: sport_game_category_id, foreign: id, foreignAlias: gameCategoryTournamentMatch }     
 
TournamentMatchFixture:
  package: GameSetting
  tableName: mutms_tbl_tournament_match_fixture
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    tournament_match_id: { type: integer } 
    tournament_match_token_id: { type: string(100) } 
    parent_match_fixture_id: { type: integer } 
    parent_match_fixture_token_id: { type: string(100) }  
    sport_game_id: { type: integer } 
    sport_game_token_id: { type: string(100) } 
    gender_category_id: { type: integer } 
    contestant_team_mode: { type: integer } 
    match_round_type_id: { type: integer } 
    match_heat_type_id: { type: integer } 
    match_round_type_name: { type: string(100) } 
    match_heat_type_name: { type: string(100) }
    match_heat_number: { type: integer }  
    match_heat_name: { type: string(100) }   
    match_fixture_round_mode: { type: integer } 
    event_type: { type: integer } 
    contestant_mode: { type: integer } 
    number_of_teams_per_fixture: { type: integer } 
    number_of_participants_per_fixture: { type: integer } 
    number_of_qualifying_rows: { type: integer } 
    number_of_best_qualifying_rows: { type: integer } 
    match_venue: { type: string(100) } 
    tournament_match_session_mode: { type: integer } 
    tournament_match_fixture_number: { type: string(100) } 
    tournament_match_fixture_full_number: { type: string(100) } 
    match_date: { type: string(100) }
    match_time: { type: string(100) }
    start_date: { type: string(100) }
    effective_date: { type: string(100) }  
    end_date: { type: string(100) }  
    qualifying_rows_enable_flag: { type: boolean, default: false } 
    best_qualifying_row_enable_flag: { type: boolean, default: false } 
    enable_participant_team_number_mandatory_flag: { type: boolean, default: false } 
    enable_participant_number_mandatory_flag: { type: boolean, default: false } 
    parent_flag: { type: boolean, default: false } 
    inheritable_flag: { type: boolean, default: false } 
    roundable_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: false } 
    competition_flag: { type: boolean, default: false } 
    complete_flag: { type: boolean, default: false } 
    roundable_flag: { type: boolean, default: true } 
    final_flag: { type: boolean, default: false } 
    competition_status: { type: integer, default: 1  } 
    fixture_round_status: { type: integer} 
    duration_status: { type: integer} 
    process_status: { type: integer, default: 1  } 
    approval_status: { type: integer, default: 1  } 
    status: { type: integer, default: 1  } 
    description:  { type: string(255) }    
  relations:  
    TournamentMatch: { onDelete: CASCADE, local: tournament_match_id, foreign: id, foreignAlias: tournamentMatchMatchFixtures }     
    SportGame: { onDelete: CASCADE, local: sport_game_id, foreign: id, foreignAlias: sportGameMatchFixtures }     
    TournamentMatchFixture: { onDelete: CASCADE, local: parent_match_fixture_id, foreign: id, foreignAlias: matchFixtureParentFixtures } 
    
TournamentMatchFixtureGroup:
  package: GameSetting
  tableName: mutms_tbl_tournament_match_fixture_group
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    tournament_match_id: { type: integer }
    tournament_match_fixture_id: { type: integer }
    tournament_match_fixture_token_id: { type: string(100) } 
    tournament_sport_game_group_id: { type: integer } 
    gender_category_id: { type: integer } 
    contestant_team_mode: { type: integer } 
    tournament_match_group_number: { type: string(100) }
    match_fixture_round_mode: { type: integer } 
    match_heat_number: { type: integer }  
    match_heat_name: { type: string(100) }  
    match_venue: { type: string(100) } 
    match_date: { type: string(100) }
    match_time: { type: string(100) }
    tournament_match_session_mode: { type: integer } 
    number_of_qualifying_rows: { type: integer } 
    number_of_best_qualifying_rows: { type: integer } 
    number_of_teams_per_fixture_group: { type: integer } 
    number_of_participants_per_fixture_group: { type: integer } 
    effective_date: { type: string(100) }
    qualifying_rows_enable_flag: { type: boolean, default: false } 
    best_qualifying_row_enable_flag: { type: boolean, default: false } 
    enable_participant_team_number_mandatory_flag: { type: boolean, default: false } 
    enable_participant_number_mandatory_flag: { type: boolean, default: false } 
    qualified_flag: { type: boolean, default: false } 
    qualification_status: { type: integer, default: 1  } 
    confirmed_flag: { type: boolean, default: false } 
    competition_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: false } 
    roundable_flag: { type: boolean, default: true } 
    final_flag: { type: boolean, default: false } 
    competition_status: { type: integer, default: 1  } 
    fixture_round_status: { type: integer} 
    duration_status: { type: integer} 
    process_status: { type: integer, default: 1  } 
    approval_status: { type: integer, default: 1  } 
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    TournamentMatch: { onDelete: CASCADE, local: tournament_match_id, foreign: id, foreignAlias: tournamentMatchMatchFixtureGroups }    
    TournamentMatchFixture: { onDelete: CASCADE, local: tournament_match_fixture_id, foreign: id, foreignAlias: matchFixtureMatchFixtureGroups }  
    TournamentSportGameGroup: { onDelete: CASCADE, local: tournament_sport_game_group_id, foreign: id, foreignAlias: tournamentSportGameGroupMatchFixtureGroups } 

TournamentMatchParticipantTeam:
  package: GameSetting
  tableName: mutms_tbl_tournament_match_participant_team
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    tournament_match_id: { type: integer }
    tournament_match_fixture_id: { type: integer }
    tournament_match_fixture_token_id: { type: string(100) } 
    tournament_match_fixture_group_id: { type: integer }
    tournament_match_fixture_group_token_id: { type: string(100) } 
    tournament_sport_game_group_id: { type: integer } 
    group_participant_team_id: { type: integer } 
    group_participant_team_token_id: { type: string(100) } 
    match_result_point: { type: integer } 
    match_result_score: { type: integer } 
    match_result_time: { type: datetime } 
    red_card_number: { type: integer } 
    yellow_card_number: { type: integer } 
    match_result_winner_point: { type: integer } 
    match_result_loser_point: { type: integer } 
    standing_rank: { type: integer }
    gold_medal: { type: integer }
    silver_medal: { type: integer }
    bronze_medal: { type: integer }
    total_medal_award: { type: integer }
    effective_date: { type: string(100) }
    qualified_flag: { type: boolean, default: false } 
    confirmed_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: false } 
    competition_flag: { type: boolean, default: false } 
    medal_award_flag: { type: boolean, default: false } 
    qualification_status: { type: integer, default: 1  } 
    competition_status: { type: integer, default: 1  } 
    process_status: { type: integer, default: 1  } 
    approval_status: { type: integer, default: 1  } 
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    TournamentMatch: { onDelete: CASCADE, local: tournament_match_id, foreign: id, foreignAlias: tournamentMatchMatchParticipantTeams }   
    TournamentGroupParticipantTeam: { onDelete: CASCADE, local: group_participant_team_id, foreign: id, foreignAlias: sportGameTeamGroupMatchTeamParticipantTeams } 
    TournamentMatchFixture: { onDelete: CASCADE, local: tournament_match_fixture_id, foreign: id, foreignAlias: matchFixtureParticipantTeams }  
    TournamentMatchFixtureGroup: { onDelete: CASCADE, local: tournament_match_fixture_group_id, foreign: id, foreignAlias: tournamentMatchFixtureGroupParticipantTeams }   
    TournamentSportGameGroup: { onDelete: CASCADE, local: tournament_sport_game_group_id, foreign: id, foreignAlias: tournamentSportGameGroupMatchParticipant }  

MultipleParticipantTeam:
  package: GameSetting
  inheritance:
    extends: TournamentMatchParticipantTeam
    type: concrete
    keyField: type
    keyValue: 1
  columns: 
    
PairParticipantTeam:
  package: GameSetting 
  inheritance:
    extends: TournamentMatchParticipantTeam
    type: concrete
    keyField: type
    keyValue: 2  
  columns:  
   
TournamentMatchTeamMemberParticipant:
  package: GameSetting
  tableName: mutms_tbl_tournament_match_team_member_participant
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    tournament_match_id: { type: integer }
    tournament_match_fixture_id: { type: integer }
    tournament_match_fixture_token_id: { type: string(100) } 
    tournament_match_fixture_group_id: { type: integer }
    tournament_match_participant_team_id: { type: integer }
    participant_team_member_id: { type: integer }
    participant_team_member_role_id: { type: integer }
    match_result_rank: { type: integer } 
    match_position_order: { type: integer } 
    match_result_position_order: { type: integer } 
    match_result_point: { type: integer } 
    match_result_score: { type: integer } 
    match_result_goal_number: { type: integer } 
    red_card_number: { type: integer } 
    yellow_card_number: { type: integer } 
    match_result_distance: { type: float } 
    match_result_height: { type: float } 
    match_result_time: { type: datetime } 
    effective_date: { type: string(100) }
    qualified_flag: { type: boolean  } 
    confirmed_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: false } 
    medal_award_flag: { type: boolean, default: false } 
    qualification_status: { type: integer, default: 1  } 
    competition_status: { type: integer, default: 1  } 
    approval_status: { type: integer, default: 1  } 
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    TournamentMatch: { onDelete: CASCADE, local: tournament_match_id, foreign: id, foreignAlias: tournamentMatchParticipantTeamMembers }   
    TeamMemberParticipant: { onDelete: CASCADE, local: participant_team_member_id, foreign: id, foreignAlias: teamMemberParticipantTournamentMatchParticipants }  
    TeamMemberParticipantRole: { onDelete: CASCADE, local: participant_team_member_role_id, foreign: id, foreignAlias: teamMemberParticipantRoleTournamentMatchParticipants }  
    TournamentMatchFixtureGroup: { onDelete: CASCADE, local: tournament_match_fixture_group_id, foreign: id, foreignAlias: tournamentMatchFixtureGroupTeamMemberParicipants }  
    TournamentMatchFixture: { onDelete: CASCADE, local: tournament_match_fixture_id, foreign: id, foreignAlias: matchFixtureParticipants }  
    TournamentMatchParticipantTeam: { onDelete: CASCADE, local: tournament_match_participant_team_id, foreign: id, foreignAlias: tournamentMatchParticipantTeamMemberParticipants }  
  
TournamentMatchFixtureResult:
  package: GameSetting
  tableName: mutms_tbl_tournament_match_fixture_result
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    tournament_match_fixture_id: { type: integer }
    tournament_match_fixture_group_id: { type: integer }
    match_fixture_team_member_participant_id: { type: integer }
    match_round_type: { type: integer } 
    match_result_rank: { type: integer } 
    match_position_order: { type: integer } 
    match_result_position_order: { type: integer } 
    match_result_point: { type: integer } 
    match_result_score: { type: integer } 
    match_result_goal_number: { type: integer } 
    match_result_distance: { type: float } 
    match_result_height: { type: float } 
    match_result_time: { type: datetime } 
    effective_date: { type: string(100) }
    qualified_flag: { type: boolean  } 
    active_flag: { type: boolean, default: false } 
    medal_award_flag: { type: boolean, default: false } 
    qualification_status: { type: integer, default: 1  } 
    competition_status: { type: integer, default: 1  } 
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    TournamentMatchFixture: { onDelete: CASCADE, local: tournament_match_fixture_id, foreign: id, foreignAlias: tournamentMatchFixtureResults }  
    TournamentMatchFixtureGroup: { onDelete: CASCADE, local: tournament_match_fixture_group_id, foreign: id, foreignAlias: tournamentMatchFixtureResults }  
    TournamentMatchTeamMemberParticipant: { onDelete: CASCADE, local: match_fixture_team_member_participant_id, foreign: id, foreignAlias: tournamentMatchFixtureResults }  
  
############  Tournament Team Standings ####################

TournamentParticipantTeamMedalStanding:
  package: TournamentManagement
  tableName: mutms_tbl_tournament_participant_team_medal_standing
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }       
    org_id: { type: integer }
    org_token_id: { type: string(100) } 
    tournament_id: { type: integer }
    team_id: { type: integer }
    team_token_id: { type: string(100) } 
    standing_rank: { type: integer }
    gold_medal: { type: integer }
    silver_medal: { type: integer }
    bronze_medal: { type: integer }
    other_medal_award: { type: integer }
    total_medal_award: { type: integer }
    active_flag: { type: boolean, default: true }
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    Tournament: { onDelete: CASCADE, local: tournament_id, foreign: id, foreignAlias: tournamentParticipantTeamStandings } 
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationTournamentParticipantTeamStandings }  
    Team: { onDelete: CASCADE, local: team_id, foreign: id, foreignAlias: teamTournamentParticipantTeamStandings } 
 
TournamentParticipantTeamMedalStandingDetail:
  package: TournamentManagement
  tableName: mutms_tbl_tournament_participant_team_medal_standing_detail
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }       
    participant_team_medal_standing_id: { type: integer }
    participant_team_medal_standing_token_id: { type: string(100) } 
    tournament_match_id: { type: integer }
    tournament_match_fixture_group_id: { type: integer }
    participant_team_member_id: { type: integer }
    medal_award_mode: { type: integer }
    sport_game_id: { type: integer }
    standing_rank: { type: integer }
    gold_medal: { type: integer }
    silver_medal: { type: integer }
    bronze_medal: { type: integer }
    total_medal_award: { type: integer }
    active_flag: { type: boolean, default: true }
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    TournamentMatch: { onDelete: CASCADE, local: tournament_match_id, foreign: id, foreignAlias: tournamentMatchParticipantTeamStandingDetails }   
    TournamentParticipantTeamMedalStanding: { onDelete: CASCADE, local: participant_team_medal_standing_id, foreign: id, foreignAlias: tournamentParticipantTeamStandingDetails } 
    TournamentMatchFixtureGroup: { onDelete: CASCADE, local: tournament_match_fixture_group_id, foreign: id, foreignAlias: tournamentMatchFixtureGoupParticipantTeamStandingDetails } 
    TournamentMatchTeamMemberParticipant: { onDelete: CASCADE, local: participant_team_member_id, foreign: id, foreignAlias: tournamentMatchTeamMemberParticipantTeamStandingDetails } 
    SportGame: { onDelete: CASCADE, local: sport_game_id, foreign: id, foreignAlias: sportGameParticipantTeamStandingDetails } 
 
############  Party Management ####################

TournamentMatchMedalAward:
  package: TournamentManagement
  tableName: mutms_tbl_tournament_match_medal_award
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    org_id: { type: integer }
    org_token_id: { type: string(100) } 
    tournament_id: { type: integer }
    sport_game_category_id: { type: integer } 
    tournament_medal_award_number: { type: string(100) }
    tournament_medal_award_full_number: { type: string(100) }   
    completed_flag: { type: boolean, default: false }
    effective_date: { type: string(100) } 
    start_date: { type: string(100) } 
    end_date: { type: string(100) } 
    active_flag: { type: boolean, default: true }
    process_status: { type: integer, default: 1  } 
    approval_status: { type: integer, default: 1  } 
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationTournamentMatchMedalAwards }
    Tournament: { onDelete: CASCADE, local: tournament_id, foreign: id, foreignAlias: tournamentTournamentMatchMedalAwards }     
    GameCategory: { onDelete: CASCADE, local: sport_game_category_id, foreign: id, foreignAlias: gameCategoryTournamentMatchMedalAwards }     
 
 
TournamentMatchTeamMedalAward:
  package: TournamentManagement
  tableName: mutms_tbl_tournament_match_team_medal_award
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }     
    tournament_match_medal_award_id: { type: integer }
    tournament_match_fixture_id: { type: integer }
    tournament_match_fixture_group_id: { type: integer }
    tournament_match_fixture_group_id: { type: integer }
    tournament_match_participant_team_id: { type: integer } 
    tournament_medal_award_mode: { type: integer }
    gold_medal: { type: integer }
    silver_medal: { type: integer }
    bronze_medal: { type: integer }
    other_medal_award: { type: integer }
    total_medal_award: { type: integer } 
    active_flag: { type: boolean, default: true }
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    TournamentMatchMedalAward: { onDelete: CASCADE, local: tournament_match_medal_award_id, foreign: id, foreignAlias: tournamentMatchMedalAwardTeamAwards } 
    TournamentMatchFixture: { onDelete: CASCADE, local: tournament_match_fixture_id, foreign: id, foreignAlias: tournamentMatchFixtureTeamAwards }  
    TournamentMatchFixtureGroup: { onDelete: CASCADE, local: tournament_match_fixture_group_id, foreign: id, foreignAlias: tournamentMatchFixtureGroupTeamAwards } 
    TournamentMatchParticipantTeam: { onDelete: CASCADE, local: tournament_match_participant_team_id, foreign: id, foreignAlias: tournamentMatchParticipantTeamMedalAwards } 
 
TournamentMatchTeamMedalAwardParticipant:
  package: TournamentManagement
  tableName: mutms_tbl_tournament_match_team_medal_award_participant
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    tournament_match_medal_award_id: { type: integer }
    tournament_match_team_medal_award_id: { type: integer }
    tournament_match_fixture_participant_id: { type: integer } 
    tournament_medal_award_mode: { type: integer }
    gold_medal: { type: integer }
    silver_medal: { type: integer }
    bronze_medal: { type: integer }
    other_medal_award: { type: integer }
    total_medal_award: { type: integer } 
    active_flag: { type: boolean, default: true }
    status: { type: integer, default: 1  } 
    description:  { type: clob }  
  relations:  
    TournamentMatchMedalAward: { onDelete: CASCADE, local: tournament_match_medal_award_id, foreign: id, foreignAlias: tournamentMatchTeamMedalAwardParticipants } 
    TournamentMatchTeamMedalAward: { onDelete: CASCADE, local: tournament_match_team_medal_award_id, foreign: id, foreignAlias: tournamentMatchTeamMedalAwardParticipants } 
    TournamentMatchTeamMemberParticipant: { onDelete: CASCADE, local: tournament_match_fixture_participant_id, foreign: id, foreignAlias: tournamentMatchTeamMemberParticipantMedaAwardParticipants }

 
############  Party Management ####################

TournamentNews:
  package: TournamentManagement
  tableName: mutms_tbl_tournament_news
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(64) }    
    org_id: { type: integer }
    org_token_id: { type: string(100) } 
    tournament_id: { type: integer }
    tournament_event_type: { type: integer }
    news_full_title: { type: string(255) }  
    tournament_news_file_type: { type: string(255) }
    tournament_news_file_name:  { type: string(255) }  
    tournament_news_file_name_path:  { type: string(255) }  
    tournament_news_file_full_path:  { type: string(255) }
    published_date: { type: string(100) } 
    edited_date: { type: string(100) } 
    active_flag: { type: boolean, default: false }
    featured_flag: { type: boolean, default: false }
    archived_flag: { type: boolean, default: false }
    status: { type: integer, default: 1 }
    description:  { type: clob }
  relations:
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationTournamentNews }  
    Tournament: { onDelete: CASCADE, local: tournament_id, foreign: id, foreignAlias: tournamentTournamentNews } 
    
TournamentProgram:
  package: TournamentManagement
  tableName: mutms_tbl_tournament_programs
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(64) }    
    org_id: { type: integer }
    org_token_id: { type: string(100) } 
    tournament_id: { type: integer }
    program_full_title: { type: string(255) }
    event_date: { type: string(100) } 
    effective_date: { type: string(100) } 
    start_date: { type: string(100) } 
    end_date: { type: string(100) } 
    active_flag: { type: boolean, default: false }
    featured_flag: { type: boolean, default: false }
    archived_flag: { type: boolean, default: false }
    status: { type: integer, default: 1 }
    description:  { type: clob }
  relations:
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationTournamentPrograms }  
    Tournament: { onDelete: CASCADE, local: tournament_id, foreign: id, foreignAlias: tournamentTournamentPrograms } 

############  Party Management ####################

Party:
  package: PartyManagement
  tableName: mutms_tbl_party
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    org_id: { type: integer }
    org_token_id: { type: string(100) }  
    parent_id: { type: integer } 
    name: { type: string(255) }
    alias: { type: string(50) } 
    party_code_number: { type: string(100) }  
    parent_flag: { type: boolean, default: false } 
    super_parent_flag: { type: boolean, default: false } 
    default_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: true } 
    status: { type: integer, default: 1  } 
    trashed_flag: { type: boolean, default: 0 } 
    trashed_on: { type: string(100) }
    description:  { type: clob }  
  relations: 
    Party: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: parentOrganizations }    
    Party: { onDelete: CASCADE, local: parent_id, foreign: id, foreignAlias: parentPartys }    

Organization:
  package: PartyManagement 
  inheritance:
    extends: Party
    type: concrete
    keyField: type
    keyValue: 1  
  columns: 
    representative_id: { type: integer }  

Person:
  package: PartyManagement
  inheritance:
    extends: Party
    type: concrete
    keyField: type
    keyValue: 2
  columns: 
    title:  { type: string(40) } 
    middle_name:  { type: string(100) }
    last_name: { type: string(100) }
    full_name: { type: string(255) }
    gender: { type: integer }
    date_of_birth:  { type: string(100) } 
    place_of_birth: { type: string(100) } 
    religion: { type: integer } 
    ethnicity: { type: integer }  
    nationality: { type: integer }  
    access_activation_key: { type: string(100) } 
 
#************* Party Role, Relationship, Contact Infomation ******************/

PartyRole:
  package: PartyManagement
  tableName: mutms_tbl_party_role
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }  
    party_id: { type: integer }  
    party_role_type: { type: integer }    
    party_unit_type: { type: integer }    
    party_type: { type: integer }    
    from_date: { type: string(100) }
    thru_date: { type: string(100) }
    status: { type: integer, default: 1  } 
    default_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: false }  
    description:  { type: clob }
  relations:
    Party: { onDelete: CASCADE, local: party_id, foreign: id, foreignAlias: partyRoles }
    
PartyRelationship:
  package: PartyManagement
  tableName: mutms_tbl_party_relationship
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }  
    party_id: { type: integer }  
    relationship_type: { type: integer }   
    position_role_id: { type: integer }  
    from_date: { type: string(100) }
    to_date: { type: string(100) }
    status: { type: integer, default: 1  } 
    default_flag: { type: boolean, default: false } 
    active_flag: { type: boolean, default: false }   
    description:  { type: clob }
  relations:
    Party: { onDelete: CASCADE, local: party_id, foreign: id, foreignAlias: partyRelationships }

PartyContact:
  package: PartyManagement
  tableName: mutms_tbl_party_contact_address
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }     
    from_date: { type: string(100) }
    to_date: { type: string(100) }
    party_id: { type: integer }  
    party_token_id: { type: string(100) } 
    address_one: { type: string(100) }
    address_two: { type: string(100) }
    country: { type: integer }
    identification_type: { type: integer }
    identification_number: { type: string(100) }
    mobile_number:  { type: string(255) }
    home_phone_number:  { type: string(255) }
    pobox:  { type: string(255) }
    email:  { type: string(255) }
    website:  { type: string(255) } 
    photo:  { type: string(255) }
    photo_file_path:  { type: string(255) }
    default_flag: { type: boolean , default: false } 
    active_flag: { type: boolean , default: false } 
    status: { type: integer }  
    description:  { type: clob }
  relations:
    Party: { onDelete: CASCADE, local: party_id, foreign: id, foreignAlias: partyContactAddresses }

PersonalContact:
  package: PartyManagement 
  inheritance:
    extends: PartyContact
    type: concrete
    keyField: type
    keyValue: 1
  columns:   
  
CompanyContact:
  package: PartyManagement 
  inheritance:
    extends: PartyContact
    type: concrete
    keyField: type
    keyValue: 3
  columns:   


############  General Setting ####################
   
SystemConfig:
  package: GeneralSetting
  tableName: mutms_tbl_system_config
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    org_id: { type: integer }
    org_token_id: { type: string(100) }   
    active_language: { type: integer }
    default_pagination_number: { type: integer } 
    start_date: { type: string(100) }
    end_date: { type: string(100) }  
    default_flag: { type: boolean, default: false }
    applicable_flag: { type: boolean, default: true }
    active_flag: { type: boolean, default: true } 
    description:  { type: string(255) }    
  relations:  
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationSystemConfigs }     
 
    
CodeGenerator:
  package: GeneralSetting
  tableName: mutms_tbl_code_generator
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }  
    org_id: { type: integer }
    org_token_id: { type: string(100) } 
    prefix_code: { type: string(50) }
    alias: { type: string(100) } 
    initial_number: { type: string(100) }
    last_code: { type: string(100) }
    deleted_code: { type: string(100) }
    can_recreate_deleted: { type: boolean, default: 1 }
    code_type: { type: integer }
    has_deleted: { type: boolean, default: false } 
    default_flag: { type: boolean, default: false }
    applicable_flag: { type: boolean, default: true }
    active_flag: { type: boolean, default: true }   
    description:  { type: string(255) }    
  relations:  
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationCodeGenerators }     
 
    
#########   User Management #########

User:
  package: AdministratorManagement
  tableName: mutms_tbl_user
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }      
    org_id: { type: integer }
    org_token_id: { type: string(100) }  
    person_id: { type: integer }
    person_token_id: { type: string(100) } 
    username: { type: string(255), notnull: true }
    password: { type: string(255), notnull: true } 
    full_password: { type: string(255), notnull: true } 
    access_activation_key: { type: string(100) } 
    user_role_id: { type: integer } 
    group_id: { type: integer }  
    permission_mode: { type: integer }
    has_logged_in: { type: boolean, default: false }
    last_login_date: { type: string(100) }
    activated_key_flag: { type: boolean, default: false }
    super_admin_flag: { type: boolean, default: false }
    default_super_admin_flag: { type: boolean, default: false }
    default_flag: { type: boolean, default: false }
    active_flag: { type: boolean, default: false }
    blocked_flag: { type: boolean, default: false }
    enabled_flag: { type: boolean, default: false }
    login_flag: { type: boolean, default: false }
    status: { type: integer }
    trashed_flag: { type: boolean, default: 0 } 
    trashed_on: { type: string(100) }
    description: { type: clob }
  relations:
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationUsers }  
    Person: { onDelete: CASCADE, local: person_id, foreign: id, foreignAlias: personUserAccounts }
    UserRole: { onDelete: CASCADE, local: user_role_id, foreign: id, foreignAlias: userRoleUsers } 
    UserGroup: { onDelete: CASCADE, local: group_id, foreign: id, foreignAlias: userGroupUsers } 
   
UserGroup:
  package: AdministratorManagement
  tableName: mutms_tbl_user_group
  actAs:
    Timestampable: ~
  columns:
   token_id: { type: string(100) }    
   org_id: { type: integer }
   org_token_id: { type: string(100) }  
   user_group_role_id: { type: integer }
   name: { type: string(100) }    
   ui_theme_color_setting: { type: integer, default: 1 }
   ui_language_setting: { type: integer, default: 1 }
   active_flag: { type: boolean, default: false }
   status: { type: integer } 
   trashed_flag: { type: boolean, default: 0 } 
   trashed_on: { type: string(100) }
   description: { type: clob } 
  relations:
    UserRole: { onDelete: CASCADE, local: user_group_role_id, foreign: id, foreignAlias: userRoleUserGroups } 
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationUserGroups } 
 
UserRole:
  package: AdministratorManagement
  tableName: mutms_tbl_user_role 
  actAs:
    Timestampable: ~
  columns: 
    token_id: { type: string(100) }   
    org_id: { type: integer }
    org_token_id: { type: string(100) }   
    user_role_name: { type: string(150) } 
    user_role_type_id: { type: integer } 
    alias: { type: string(100) }  
    active_flag: { type: boolean, default: false }
    applicable_flag: { type: boolean, default: false }
    default_flag: { type: boolean, default: false } 
    trashed_flag: { type: boolean, default: 0 } 
    trashed_on: { type: string(100) }
    description: { type: clob }   
  relations: 
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationModuleSettings }  

AccessLevelPermission:
  package: AdministratorManagement
  tableName: mutms_tbl_access_level_permission
  actAs:
    Timestampable: ~
  columns: 
    token_id: { type: string(100) }   
    user_role_id: { type: integer } 
    module_setting_id: { type: integer } 
    access_level: { type: integer } 
    can_add: { type: boolean, default: false }
    can_delete: { type: boolean, default: false }
    can_edit: { type: boolean, default: false }
    can_view: { type: boolean, default: false }
    can_approve: { type: boolean, default: false }  
    description: { type: clob }
  relations:
    UserRole: { onDelete: CASCADE, local: user_role_id, foreign: id, foreignAlias: userRoleAccessPermissions } 
    ModuleSetting: { onDelete: CASCADE, local: module_setting_id, foreign: id, foreignAlias: moduleUserRoleAccessPermissions } 
 
 
ModuleSetting:
  package: AdministratorManagement
  tableName: mutms_tbl_module_setting 
  actAs:
    Timestampable: ~
  columns: 
    token_id: { type: string(100) }   
    org_id: { type: integer }
    org_token_id: { type: string(100) }  
    module_type_id: { type: integer } 
    module_name: { type: string(150) } 
    alias: { type: string(100) } 
    default_access_level_type_id: { type: integer } 
    enabled_flag: { type: boolean, default: false }
    applicable_flag: { type: boolean, default: false }
    active_flag: { type: boolean, default: false }
    default_flag: { type: boolean, default: false }  
    trashed_flag: { type: boolean, default: 0 } 
    trashed_on: { type: string(100) }
    description: { type: clob }   
  relations: 
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationModuleSettings }  
    
SystemLogFile:
  package: SystemLogFile
  tableName: mutms_tbl_system_log_file
  actAs:
    Timestampable: ~
  columns:
    token_id: { type: string(100) }    
    org_id: { type: integer }
    org_token_id: { type: string(100) }   
    user_id: { type: integer } 
    module_id: { type: integer } 
    action_date: { type: string(100) }
    action_time: { type: string(50) } 
    action_data: { type: clob } 
    action_type_id: { type: integer }
    host_name: { type: string(100) } 
    document_root: { type: string(100) } 
    php_self: { type: string(100) } 
    pc_ip_address: { type: string(100) } 
    browser_type: { type: string(100) } 
    effective_date: { type: string(100) }
    description: { type: clob } 
  relations:
    User: { onDelete: CASCADE, local: user_id, foreign: id, foreignAlias: userSystemLogFileActivities } 
    Organization: { onDelete: CASCADE, local: org_id, foreign: id, foreignAlias: organizationSystemLogFiles } 
